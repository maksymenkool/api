<?php
namespace Api\Test;

use Api\Application;
use PDO;

class FunctionalTestCase extends \PHPUnit_Framework_TestCase
{
    use PHPServerTrait;

    /**
     * @var Application
     */
    protected $app;


    /**
     * @var ApiClient
     */
    protected $apiClient;

    public function setUp()
    {
        parent::setUp();

        $this->app = Application::createByEnvironment();
        $env = $this->app['env'];
        if ($env !== 'test') {
            $this->markTestSkipped("Functional tests are disabled on this environment: $env");
        }
        foreach ($this->app['config']['db'] as $name => $db) {
            $pdo = new PDO(
                "pgsql:dbname=postgres;host={$db['host']}",
                $db['user'],
                $db['password'],
                [PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION]
            );
            $pdo->exec("DROP DATABASE IF EXISTS {$db['database']}");
            $pdo->exec("CREATE DATABASE {$db['database']} OWNER={$db['user']}");
            $this->app["db.$name.migrator"]->upgrade();
        }
        $this->startServer();
        $this->apiClient = new ApiClient("$this->host:$this->port");
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->stopServer();
        unset($this->app);
    }
}
